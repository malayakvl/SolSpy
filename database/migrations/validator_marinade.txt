-- DDL generated by Postico 2.2.1
-- Not all database features are supported. Do not use for backup.

CREATE OR REPLACE FUNCTION data.update_validators_marinade(validators_json jsonb)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
DECLARE
    _param text := NULL;
    _params text[] := ARRAY['current'];
    _delinquent boolean := NULL;
BEGIN

    FOREACH _param IN ARRAY _params LOOP

        IF NOT (jsonb_typeof(validators_json#>('{result,' || _param || '}')::text[]) = 'array') THEN
            CONTINUE;
        END IF;


        INSERT INTO data.validators (
        	name,
            start_epoch,
            url,
            ip,
            latitude,
            longitude,
            country,
            city,
            version,
            superminority,
            epoch_stats,
            epochs_count,
            has_last_epoch_stats,
            avg_uptime,
            avg_apy,
            activated_stake,

            vote_pubkey,
            node_pubkey
        )
        SELECT
            quote_literal(v->>'info_name') AS name,
            (v->>'start_epoch')::integer,
            (v->>'url'),
            (v->>'node_ip'),
            (v->>'dc_coordinates_lat')::double precision,
            (v->>'dc_coordinates_lon')::double precision,
            (v->>'dc_country'),
            (v->>'dc_city'),
            (v->>'version'),
            (v->>'superminority')::boolean,
            (v->>'epoch_stats')::jsonb,
            (v->>'epoch_stats_history')::jsonb,
            (v->>'epochs_count')::bigint,
            (v->>'has_last_epoch_stats')::boolean,
            (v->>'avg_uptime_pct')::double precision,
            (v->>'avg_apy')::double precision,
            (v->>'activated_stake')::bigint,
            
            v->>'vote_account',
            v->>'identity'
        FROM jsonb_array_elements(validators_json#>('{result,' || _param || '}')::text[]) AS v
        ON CONFLICT (vote_pubkey, node_pubkey) DO UPDATE
        SET
            name = EXCLUDED.name,
            start_epoch = EXCLUDED.start_epoch,
            url = EXCLUDED.url,
            ip = EXCLUDED.ip,
            latitude = EXCLUDED.latitude,
            longitude = EXCLUDED.longitude,
            country = EXCLUDED.country,
            city = EXCLUDED.city,
            version = EXCLUDED.version,
            superminority = EXCLUDED.superminority,
            epoch_stats = EXCLUDED.epoch_stats,
            -- Fix: Properly handle epoch_stats_history
            epoch_stats_history = CASE 
                WHEN data.validators.epoch_stats_history IS NOT NULL 
                     AND jsonb_typeof(data.validators.epoch_stats_history) = 'array'
                     AND jsonb_array_length(data.validators.epoch_stats_history) > 0 THEN
                    -- Append new epoch_stats to existing array
                    data.validators.epoch_stats_history || EXCLUDED.epoch_stats
                ELSE
                    -- Initialize with current epoch_stats if empty or null
                    EXCLUDED.epoch_stats
            END,
            epochs_count = EXCLUDED.epochs_count,
            has_last_epoch_stats = EXCLUDED.has_last_epoch_stats,
            avg_uptime = EXCLUDED.avg_uptime,
            avg_apy = EXCLUDED.avg_apy,
            activated_stake = EXCLUDED.activated_stake,
            
            node_pubkey = EXCLUDED.node_pubkey,
            vote_pubkey = EXCLUDED.vote_pubkey
        ;

    END LOOP;

END;
$function$
;